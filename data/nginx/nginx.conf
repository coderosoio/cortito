user nginx;

worker_processes 1;

error_log /var/log/nginx/error.log warn;
pid       /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http  {
  include      /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log main;

  sendfile    on;
  tcp_nopush  on;
  tcp_nodelay on;
  gzip        on;
  gzip_static on;
  gzip_min_length 10240;
  gzip_comp_level 1;
  gzip_vary on;
  gzip_disable msie6;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types
      # text/html is always compressed by HttpGzipModule
      text/css
      text/javascript
      text/xml
      text/plain
      text/x-component
      application/javascript
      application/x-javascript
      application/json
      application/xml
      application/rss+xml
      application/atom+xml
      font/truetype
      font/opentype
      application/vnd.ms-fontobject
      image/svg+xml;

  # allow the server to close connection on non responding client, this will free up memory
  reset_timedout_connection on;

  # request timed out -- default 60
  client_body_timeout 10;

  # if client stop responding, free up memory -- default 60
  send_timeout 2;

  # server will close connection after this time -- default 75
  keepalive_timeout 30;

  # number of requests client can make over keep-alive -- for testing environment
  keepalive_requests 100000;

  # Hide NGINX version (security best practice)
  server_tokens off;

  upstream cortito_api {
    server cortito-api:8080;
  }

  server {
    listen 8080;
    server_name api.coderoso.io;

    location /.well-known/acme-challenge {
      root /var/www/certbot;
    }

    location / {
      proxy_pass       http://cortito_api;
      proxy_redirect   off;
      proxy_set_header Host              $http_host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }

  upstream web {
    server web:3000;
  }

  server {
    listen 8080;
    server_name links.coderoso.io;

    location /.well-known/acme-challenge {
      root /var/www/certbot;
    }

    location / {
      proxy_pass       http://web;
      proxy_redirect   off;
      proxy_set_header Host              $http_host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }

  upstream frontend {
    server frontend:4000
  }

  server {
    listen 8080;
    server_name cortito.coderoso.io;

    location /.well-known/acme-challenge {
      root /var/www/certbot;
    }

    location / {
      root /cortito;
      try_files $uri index.html
    }
  }
}
