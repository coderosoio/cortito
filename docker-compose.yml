version: "3"

services:
  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    hostname: frontend
    restart: always
    volumes:
      - ./frontend/src:/cortito/frontend/src
      - ./frontend/public:/cortito/frontend/public
      - ./frontend/.env:/cortito/frontend/.env
      - ./frontend/jsconfig.json:/cortito/frontend/jsconfig.json
    env_file:
      - .env
    depends_on:
      - cortito-api
    ports:
      - "4000:4000"
      - "35729:35729"

  api:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    hostname: api
    restart: always
    volumes:
      - ./api:/cortito/api
      - ./common:/cortito/common
      - ./account:/cortito/account
      - ./shortener:/cortito/shortener
    env_file:
      - .env
    depends_on:
      - account
      - shortener
      - cortito-api

  account:
    build:
      context: .
      dockerfile: ./docker/account/Dockerfile
    hostname: account
    restart: always
    volumes:
      - ./account:/cortito/account
      - ./common:/cortito/common
      - ./jwt.pem.key:/cortito/account/jwt.pem.key
      - ./jwt.pem.key.pub:/cortito/account/jwt.pem.key.pub
    env_file:
      - .env
    depends_on:
      - postgres-account
      - consul

  shortener:
    build:
      context: .
      dockerfile: ./docker/shortener/Dockerfile
    hostname: shortener
    restart: always
    volumes:
      - ./shortener:/cortito/shortener
      - ./common:/cortito/common
      - ./jwt.pem.key:/cortito/shortener/jwt.pem.key
      - ./jwt.pem.key.pub:/cortito/shortener/jwt.pem.key.pub
    env_file:
      - .env
    depends_on:
      - consul
      - postgres-shortener

  web:
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    hostname: web
    restart: always
    volumes:
      - ./web:/cortito/web
      - ./shortener:/cortito/shortener
      - ./common:/cortito/common
    env_file:
      - .env
    depends_on:
      - shortener
    ports:
      - "3000:3000"

  postgres-account:
    image: postgres:latest
    hostname: postgres-account
    restart: always
    volumes:
      - postgres-account:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${ACCOUNT_DB_NAME:-cortito_account}

  postgres-shortener:
    image: postgres:latest
    hostname: postgres-shortener
    restart: always
    volumes:
      - postgres-shortener:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${SHORTENER_DB_NAME:-cortito_shortener}

  consul:
    image: progrium/consul:latest
    command: -server -bootstrap -rejoin
    hostname: consul
    restart: always
    ports:
      - "8300:8300"
      - "8400:8400"
      - "8500:8500"
      - "8600:53/udp"

  micro-web:
    image: microhq/micro
    command: web --namespace=io.coderoso.cortito
    hostname: micro-web
    restart: always
    ports:
      - "8082:8082"
    env_file:
      - .env
    depends_on:
      - consul

  cortito-api:
    image: microhq/micro
    command: api --handler=http --namespace=io.coderoso.cortito --resolver=micro
    hostname: cortito-api
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - consul

  redis:
    image: redis:alpine
    hostname: redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    env_file:
      - .env

volumes:
  postgres-account:
  postgres-shortener:
  redis-data:
